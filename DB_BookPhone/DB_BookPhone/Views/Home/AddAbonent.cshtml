@model DB_BookPhone.Models.Abonent

@{
    ViewBag.Title = "AddAbonent";
}

<h2>AddAbonent</h2>
<form class="form-horizontal" method="post" enctype="multipart/form-data"> @*Для загрузки фото абоненкта enctype*@
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Abonent</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            <div class="col-sm-10">
                <img id="img-preview" src="/Images/no-image.png" />
            </div>
        </div>
        <div class="form-group">
            <label for="inputFile" class="col-sm-2 control-label">Изображение</label>
            <div class="col-sm-10">
                <input type="file" name="file" class="form-control" id="inputFile">
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SurName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SurName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SurName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Number, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Number, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Number, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}
</form>

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>



    @*<form class="form-horizontal" method="post" enctype="multipart/form-data">
            <div class="form-group">
                <label for="inputFile" class="col-sm-2 control-label">Image</label>
                <div class="col-sm-10">
                    <input type="file" name="file" class="form-control" id="inputFile">
                </div>
            </div>
            <div class="form-group">
                <label for="inputName" class="col-sm-2 control-label">Name</label>
                <div class="col-sm-10">
                    <input type="text" required name="name" class="form-control" id="inputName" placeholder="Name">
                </div>
            </div>
            <div class="form-group">
                <label for="inputDescription" class="col-sm-2 control-label">Description</label>
                <div class="col-sm-10">
                    <input type="text" name="description" class="form-control" id="inputDescription" placeholder="Description">
                </div>
            </div>
            <div class="form-group">
                <label for="inputPrice" class="col-sm-2 control-label">Price</label>
                <div class="col-sm-10">
                    <input type="number" name="price" class="form-control" id="inputPrice" placeholder="Price">
                </div>
            </div>
            <div class="form-group">
                <div class="col-sm-offset-2 col-sm-10">
                    <button type="submit" class="btn btn-default">Add</button>
                </div>
            </div>
        </form>*@



    @section scripts {
        <script>
            $(document).ready(() => {
                //объект для чтения изображения
                var reader = new FileReader();

                //событие, которое срабатывает при вызове функции 'readAsDataURL'
                reader.onload = function (e) {
                    var image = e.srcElement.result;
                    $('#img-preview').attr('src', image);
                };
                //событие изменения input[type=file]
                $('input[type=file]').change(function () {
                    var file = this.files[0];
                    reader.readAsDataURL(file);
                });
            });
        </script>
    }
